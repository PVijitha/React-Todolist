{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Todolist\\\\src\\\\components\\\\AddTodo\\\\AddTodo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport './AddTodo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTodo({\n  show,\n  setShow,\n  addTask\n}) {\n  _s();\n  function handleClose() {\n    setShow(false);\n  }\n  const [title, setValue] = useState(\"\");\n  const [description, setDes] = useState(\"\");\n  const [isTitleValid, setIsTitleValid] = useState(true);\n  const [isAlreadyExist, setisAlreadyExist] = useState(true);\n  const addItem = () => {\n    const trimmedTitle = title.trim();\n    if (trimmedTitle === '') {\n      setIsTitleValid(false);\n      return;\n    }\n    // Check if the title already exists in the tasks\n    const existingTasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    const titleAlreadyExists = existingTasks === null || existingTasks === void 0 ? void 0 : existingTasks.some(task => task.title.toLowerCase() === trimmedTitle.toLowerCase());\n    if (titleAlreadyExists) {\n      // Handle the case where the title already exists\n      // For example, you can show an error message or take appropriate action\n      setisAlreadyExist(false);\n      return;\n    }\n    addTask(trimmedTitle, description);\n    const updatedTasks = [...existingTasks, {\n      title: trimmedTitle,\n      description\n    }];\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n    setValue(\"\");\n    setDes(\"\");\n    setIsTitleValid(true);\n    setShow(false);\n  };\n  function handleInputChange(e) {\n    setValue(e.target.value);\n    setIsTitleValid(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      className: \"modal-container\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"title\",\n        className: \"ms-1 mb-1 p-2 task-title\",\n        value: title,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), !isTitleValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error ms-1\",\n        children: \"Title cannot be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 26\n      }, this), !isAlreadyExist && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error ms-1\",\n        children: \"This task already exist in todolist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"textarea\",\n        id: \"textarea\",\n        value: description,\n        placeholder: \"add task description....\",\n        className: \"area ms-1 ps-2\",\n        onChange: e => setDes(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: addItem,\n          disabled: !isTitleValid,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTodo, \"hFcAqNqbGLEDpwSfoqfH+a+MxjE=\");\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["React","useState","Modal","Button","jsxDEV","_jsxDEV","AddTodo","show","setShow","addTask","_s","handleClose","title","setValue","description","setDes","isTitleValid","setIsTitleValid","isAlreadyExist","setisAlreadyExist","addItem","trimmedTitle","trim","existingTasks","JSON","parse","localStorage","getItem","titleAlreadyExists","some","task","toLowerCase","updatedTasks","setItem","stringify","handleInputChange","e","target","value","children","onHide","className","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","name","id","Footer","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/React-Todolist/src/components/AddTodo/AddTodo.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport './AddTodo.css';\r\n\r\nfunction AddTodo({ show, setShow, addTask }) {\r\n\r\n function handleClose() {\r\n    setShow(false); \r\n  } \r\n\r\n  const [title, setValue] = useState(\"\");\r\n  const [description, setDes] = useState(\"\");\r\n  const [isTitleValid, setIsTitleValid] = useState(true);\r\n  const [isAlreadyExist, setisAlreadyExist] = useState(true);\r\n\r\n  const addItem = () => {\r\n    const trimmedTitle = title.trim();\r\n    if (trimmedTitle === '') {\r\n      setIsTitleValid(false);\r\n      return;\r\n    }\r\n    // Check if the title already exists in the tasks\r\n    const existingTasks = JSON.parse(localStorage.getItem('tasks')) || [];\r\n    const titleAlreadyExists = existingTasks?.some(task => task.title.toLowerCase() === trimmedTitle.toLowerCase()); \r\n    if (titleAlreadyExists) {\r\n      // Handle the case where the title already exists\r\n      // For example, you can show an error message or take appropriate action\r\n      setisAlreadyExist(false);\r\n      return;\r\n    } \r\n    addTask(trimmedTitle, description);\r\n    const updatedTasks = [...existingTasks, { title: trimmedTitle, description }];\r\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\r\n    setValue(\"\");\r\n    setDes(\"\");\r\n    setIsTitleValid(true);\r\n    setShow(false);\r\n  };\r\n  \r\n  function handleInputChange(e) {\r\n    setValue(e.target.value);\r\n    setIsTitleValid(true);  \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleClose} className='modal-container'>\r\n      <Modal.Header closeButton>\r\n      <Modal.Title>New Task</Modal.Title>\r\n      </Modal.Header>\r\n      <input type=\"text\" placeholder='title' className='ms-1 mb-1 p-2 task-title' value={title} onChange={handleInputChange} required/>\r\n        {!isTitleValid &&<p className='error ms-1'>Title cannot be empty</p>}\r\n        {!isAlreadyExist  &&<p className='error ms-1'>This task already exist in todolist</p>}\r\n      <textarea name=\"textarea\" id=\"textarea\" value={description} placeholder='add task description....' className='area ms-1 ps-2' onChange={(e) => setDes(e.target.value)}/>\r\n      <Modal.Footer>\r\n      <Button variant=\"secondary\" onClick={handleClose}>Cancel</Button>\r\n      <Button variant=\"primary\" onClick={addItem} disabled={!isTitleValid}>Save</Button>\r\n      </Modal.Footer>\r\n      </Modal></div>\r\n  )\r\n}\r\n\r\nexport default AddTodo"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}