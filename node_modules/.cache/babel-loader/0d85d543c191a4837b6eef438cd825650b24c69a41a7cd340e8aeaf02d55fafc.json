{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-TodoList\\\\todolist\\\\src\\\\components\\\\AddTodo\\\\AddTodo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport './AddTodo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTodo(props) {\n  _s();\n  function handleClose() {\n    props.setShow(false);\n  }\n  const [title, setValue] = useState(\"\");\n  const [description, setDes] = useState(\"\");\n  const [isTitleValid, setIsTitleValid] = useState(true);\n  const [isAlreadyExist, setisAlreadyExist] = useState(true);\n\n  // const addItem = () => {\n  //   if (title.trim() === '') {\n  //     setIsTitleValid(false);\n  //     return;\n  //   }\n  //   props.addTask(title, description);\n  //   const existingTasks = JSON.parse(localStorage.getItem('tasks')) || [];\n  //   const updatedTasks = [...existingTasks, { title, description }];\n  //   localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n  //   setValue(\"\");\n  //   setDes(\"\");\n  //   setIsTitleValid(true);\n  //   props.setShow(false);\n  // };\n\n  if (props.setSearch) {}\n  const addItem = () => {\n    const trimmedTitle = title.trim();\n    if (trimmedTitle === '') {\n      setIsTitleValid(false);\n      return;\n    }\n\n    // Check if the title already exists in the tasks\n    const existingTasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    const titleAlreadyExists = existingTasks.some(task => task.title.toLowerCase() === trimmedTitle.toLowerCase());\n    const search = existingTasks.filter(item => item.title === props.search);\n    console.log(search);\n    if (titleAlreadyExists) {\n      // Handle the case where the title already exists\n      // For example, you can show an error message or take appropriate action\n      setisAlreadyExist(false);\n      return;\n    }\n    props.addTask(trimmedTitle, description);\n    if (props.search) {\n      localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n    }\n    const updatedTasks = [...existingTasks, {\n      title: trimmedTitle,\n      description\n    }];\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n    setValue(\"\");\n    setDes(\"\");\n    setIsTitleValid(true);\n    props.setShow(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: props.show,\n      onHide: handleClose,\n      className: \"modal-container\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"title\",\n          className: \"ms-2 p-2 dask-title\",\n          value: title,\n          onChange: e => {\n            setValue(e.target.value);\n            setIsTitleValid(true);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }, this), !isTitleValid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \"Title cannot be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 26\n        }, this), !isAlreadyExist && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \"This task already exist in todolist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"textarea\",\n        id: \"textarea\",\n        value: description,\n        placeholder: \"add task description....\",\n        className: \"area ms-1 ps-2\",\n        onChange: e => setDes(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: addItem,\n          disabled: !isTitleValid,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTodo, \"hFcAqNqbGLEDpwSfoqfH+a+MxjE=\");\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["React","useState","Modal","Button","jsxDEV","_jsxDEV","AddTodo","props","_s","handleClose","setShow","title","setValue","description","setDes","isTitleValid","setIsTitleValid","isAlreadyExist","setisAlreadyExist","setSearch","addItem","trimmedTitle","trim","existingTasks","JSON","parse","localStorage","getItem","titleAlreadyExists","some","task","toLowerCase","search","filter","item","console","log","addTask","setItem","stringify","updatedTasks","children","show","onHide","className","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","required","name","id","Footer","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/React-TodoList/todolist/src/components/AddTodo/AddTodo.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport './AddTodo.css'\r\nfunction AddTodo(props) {\r\n\r\n function handleClose() {\r\n    props.setShow(false); \r\n  } \r\n  const [title, setValue] = useState(\"\");\r\n  const [description, setDes] = useState(\"\");\r\n  const [isTitleValid, setIsTitleValid] = useState(true);\r\n  const [isAlreadyExist, setisAlreadyExist] = useState(true);\r\n\r\n  // const addItem = () => {\r\n  //   if (title.trim() === '') {\r\n  //     setIsTitleValid(false);\r\n  //     return;\r\n  //   }\r\n  //   props.addTask(title, description);\r\n  //   const existingTasks = JSON.parse(localStorage.getItem('tasks')) || [];\r\n  //   const updatedTasks = [...existingTasks, { title, description }];\r\n  //   localStorage.setItem('tasks', JSON.stringify(updatedTasks));\r\n  //   setValue(\"\");\r\n  //   setDes(\"\");\r\n  //   setIsTitleValid(true);\r\n  //   props.setShow(false);\r\n  // };\r\n\r\n  if(props.setSearch) {\r\n       \r\n  }\r\n  const addItem = () => {\r\n    const trimmedTitle = title.trim();\r\n  \r\n    if (trimmedTitle === '') {\r\n      setIsTitleValid(false);\r\n      return;\r\n    }\r\n  \r\n    // Check if the title already exists in the tasks\r\n    const existingTasks = JSON.parse(localStorage.getItem('tasks')) || [];\r\n    const titleAlreadyExists = existingTasks.some(task => task.title.toLowerCase() === trimmedTitle.toLowerCase());\r\n    const search = existingTasks.filter(item => item.title === props.search);\r\n    console.log(search);\r\n    if (titleAlreadyExists) {\r\n      // Handle the case where the title already exists\r\n      // For example, you can show an error message or take appropriate action\r\n      setisAlreadyExist(false);\r\n      return;\r\n    }\r\n  \r\n    props.addTask(trimmedTitle, description);\r\n    if(props.search){\r\n      localStorage.setItem('tasks', JSON.stringify(updatedTasks));\r\n\r\n    }\r\n    const updatedTasks = [...existingTasks, { title: trimmedTitle, description }];\r\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\r\n  \r\n\r\n    setValue(\"\");\r\n    setDes(\"\");\r\n    setIsTitleValid(true);\r\n    props.setShow(false);\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Modal show={props.show} onHide={handleClose} className='modal-container'>\r\n      <Modal.Header closeButton>\r\n      <Modal.Title>New Task</Modal.Title>\r\n      <input type=\"text\" placeholder='title' className='ms-2 p-2 dask-title' value={title} onChange={(e) => {\r\n              setValue(e.target.value);\r\n              setIsTitleValid(true);             \r\n            }} required/>\r\n        {!isTitleValid &&<p className='error'>Title cannot be empty</p>}\r\n        {!isAlreadyExist  &&<p className='error'>This task already exist in todolist</p>}\r\n      </Modal.Header>\r\n      <textarea name=\"textarea\" id=\"textarea\" value={description} placeholder='add task description....' className='area ms-1 ps-2' onChange={(e) => setDes(e.target.value)}/>\r\n      <Modal.Footer>\r\n      <Button variant=\"secondary\" onClick={handleClose}>Cancel</Button>\r\n      <Button variant=\"primary\" onClick={addItem} disabled={!isTitleValid}>Save</Button>\r\n      </Modal.Footer>\r\n      </Modal></div>\r\n  )\r\n}\r\n\r\nexport default AddTodo"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}