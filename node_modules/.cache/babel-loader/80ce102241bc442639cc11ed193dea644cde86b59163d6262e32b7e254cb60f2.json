{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-TodoList\\\\todolist\\\\src\\\\components\\\\AddTodo\\\\AddTodo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport './AddTodo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTodo(props) {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const [des, setDes] = useState(\"\");\n  useEffect(() => {\n    // Load tasks from local storage when the component mounts\n    const existingTasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    // Implement logic to update the component state with existingTasks if needed\n  }, []); // Empty dependency array to run the effect only once when the component mounts\n\n  const handleClose = () => {\n    props.setShow(false);\n  };\n  const addItem = () => {\n    props.addTask(value, des);\n    const existingTasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    const updatedTasks = [...existingTasks, {\n      value,\n      des\n    }];\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n    setValue(\"\");\n    setDes(\"\");\n    props.setShow(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTodo, \"FW7eg9dfnPDCcYZ8r8fHKvQNyuY=\");\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","jsxDEV","_jsxDEV","AddTodo","props","_s","value","setValue","des","setDes","existingTasks","JSON","parse","localStorage","getItem","handleClose","setShow","addItem","addTask","updatedTasks","setItem","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/React-TodoList/todolist/src/components/AddTodo/AddTodo.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport './AddTodo.css';\r\n\r\nfunction AddTodo(props) {\r\n  const [value, setValue] = useState(\"\");\r\n  const [des, setDes] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Load tasks from local storage when the component mounts\r\n    const existingTasks = JSON.parse(localStorage.getItem('tasks')) || [];\r\n    // Implement logic to update the component state with existingTasks if needed\r\n  }, []); // Empty dependency array to run the effect only once when the component mounts\r\n\r\n  const handleClose = () => {\r\n    props.setShow(false);\r\n  };\r\n\r\n  const addItem = () => {\r\n    props.addTask(value, des);\r\n\r\n    const existingTasks = JSON.parse(localStorage.getItem('tasks')) || [];\r\n    const updatedTasks = [...existingTasks, { value, des }];\r\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\r\n\r\n    setValue(\"\");\r\n    setDes(\"\");\r\n    props.setShow(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* ... Your existing JSX code ... */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTodo;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,MAAM,QAAQ,iBAAiB;AAC/C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAElCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;IACrE;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBX,KAAK,CAACY,OAAO,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBb,KAAK,CAACc,OAAO,CAACZ,KAAK,EAAEE,GAAG,CAAC;IAEzB,MAAME,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;IACrE,MAAMK,YAAY,GAAG,CAAC,GAAGT,aAAa,EAAE;MAAEJ,KAAK;MAAEE;IAAI,CAAC,CAAC;IACvDK,YAAY,CAACO,OAAO,CAAC,OAAO,EAAET,IAAI,CAACU,SAAS,CAACF,YAAY,CAAC,CAAC;IAE3DZ,QAAQ,CAAC,EAAE,CAAC;IACZE,MAAM,CAAC,EAAE,CAAC;IACVL,KAAK,CAACY,OAAO,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEd,OAAA;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV;AAACpB,EAAA,CA/BQF,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AAiChB,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}