{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-TodoList\\\\todolist\\\\src\\\\components\\\\AddTodo\\\\AddTodo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport './AddTodo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTodo(props) {\n  _s();\n  function handleClose() {\n    props.setShow(false);\n  }\n  const [title, setValue] = useState(\"\");\n  const [description, setDes] = useState(\"\");\n  const [isTitleValid, setIsTitleValid] = useState(true);\n  const addItem = () => {\n    if (title.trim() === '') {\n      setIsTitleValid(false);\n      return;\n    }\n    props.addTask(title, description);\n    const existingTasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    const updatedTasks = [...existingTasks, {\n      title,\n      description\n    }];\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n    setValue(\"\");\n    setDes(\"\");\n    setIsTitleValid(true);\n    props.setShow(false);\n  };\n  const checkItem = () => {\n    {\n      u;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: props.show,\n      onHide: handleClose,\n      className: \"modal-container\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"title\",\n          className: \"ms-2 p-2 dask-title\",\n          value: title,\n          onChange: e => {\n            setValue(e.target.value);\n            setIsTitleValid(true);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this), !isTitleValid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \"Title cannot be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"textarea\",\n        id: \"textarea\",\n        value: description,\n        placeholder: \"add task description....\",\n        className: \"area ms-1 ps-2\",\n        onChange: e => setDes(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: addItem,\n          disabled: !isTitleValid,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTodo, \"VUkkoylu07aVWGuCveXxiCjVe5c=\");\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["React","useState","Modal","Button","jsxDEV","_jsxDEV","AddTodo","props","_s","handleClose","setShow","title","setValue","description","setDes","isTitleValid","setIsTitleValid","addItem","trim","addTask","existingTasks","JSON","parse","localStorage","getItem","updatedTasks","setItem","stringify","checkItem","u","children","show","onHide","className","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","required","name","id","Footer","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/React-TodoList/todolist/src/components/AddTodo/AddTodo.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport './AddTodo.css'\r\nfunction AddTodo(props) {\r\n\r\n function handleClose() {\r\n    props.setShow(false); \r\n  } \r\n  const [title, setValue] = useState(\"\");\r\n  const [description, setDes] = useState(\"\");\r\n  const [isTitleValid, setIsTitleValid] = useState(true);\r\n\r\n\r\n  const addItem = () => {\r\n    if (title.trim() === '') {\r\n      setIsTitleValid(false);\r\n      return;\r\n    }\r\n    props.addTask(title, description);\r\n    const existingTasks = JSON.parse(localStorage.getItem('tasks')) || [];\r\n    const updatedTasks = [...existingTasks, { title, description }];\r\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\r\n\r\n    setValue(\"\");\r\n    setDes(\"\");\r\n    setIsTitleValid(true);\r\n    props.setShow(false);\r\n  };\r\n  const checkItem = () => {\r\n     {u}\r\n  }\r\n\r\n  return (\r\n    <div>\r\n     <Modal show={props.show} onHide={handleClose} className='modal-container'>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>New Task</Modal.Title>\r\n      <input type=\"text\" placeholder='title' className='ms-2 p-2 dask-title' value={title} onChange={(e) => {\r\n              setValue(e.target.value);\r\n              setIsTitleValid(true);\r\n            }} required/>\r\n       {!isTitleValid &&<p className='error'>Title cannot be empty</p>}\r\n    </Modal.Header>\r\n      <textarea name=\"textarea\" id=\"textarea\" value={description} placeholder='add task description....' className='area ms-1 ps-2' onChange={(e) => setDes(e.target.value)}/>\r\n    <Modal.Footer>\r\n      <Button variant=\"secondary\" onClick={handleClose}>Cancel</Button>\r\n      <Button variant=\"primary\" onClick={addItem} disabled={!isTitleValid}>Save</Button>\r\n    </Modal.Footer>\r\n  </Modal></div>\r\n  )\r\n}\r\n\r\nexport default AddTodo"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}